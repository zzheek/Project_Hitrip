/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-23 08:08:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class service_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(10);
    _jspx_dependants.put("/main/../include/footer.jsp", Long.valueOf(1692778084430L));
    _jspx_dependants.put("jar:file:/C:/HITRIPver0818/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Project_HITRIP/WEB-INF/lib/spring-webmvc-5.3.6.jar!/META-INF/spring.tld", Long.valueOf(1618279800000L));
    _jspx_dependants.put("jar:file:/C:/HITRIPver0818/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Project_HITRIP/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/HITRIPver0818/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Project_HITRIP/WEB-INF/lib/org.egovframe.rte.ptl.mvc-4.0.0.jar!/META-INF/taglib.tld", Long.valueOf(1640750708000L));
    _jspx_dependants.put("/main/../include/nav.jsp", Long.valueOf(1692337405365L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1691982005951L));
    _jspx_dependants.put("/WEB-INF/lib/org.egovframe.rte.ptl.mvc-4.0.0.jar", Long.valueOf(1691982015424L));
    _jspx_dependants.put("/main/../include/header.jsp", Long.valueOf(1692579905041L));
    _jspx_dependants.put("jar:file:/C:/HITRIPver0818/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Project_HITRIP/WEB-INF/lib/spring-webmvc-5.3.6.jar!/META-INF/spring-form.tld", Long.valueOf(1618279800000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-5.3.6.jar", Long.valueOf(1691982003150L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/main.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/mainSection.css\"> <!-- 외부 스타일시트 추가 -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.13.2/jquery-ui.js\"></script>\r\n");
      out.write("<title>이용약관</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("    \r\n");
      out.write("<div class=\"wrap\">\r\n");
      out.write("\r\n");
      out.write("<!--header 시작-->\r\n");
      out.write("<header>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f2(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	function fn_logout() {\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type : \"POST\",\r\n");
      out.write("			data : \"\",\r\n");
      out.write("			url  : \"/logout.do\",\r\n");
      out.write("			\r\n");
      out.write("			datatype : \"text\",\r\n");
      out.write("			success  : function(data){\r\n");
      out.write("	            if(data == \"1\" ) {\r\n");
      out.write("	               alert(\"로그아웃되었습니다.\");\r\n");
      out.write("	               location=\"/\";\r\n");
      out.write("	            } else {\r\n");
      out.write("	            	alert(\"로그아웃 실패.\");\r\n");
      out.write("	            } \r\n");
      out.write("	         },\r\n");
      out.write("	         error : function(){\r\n");
      out.write("	            alert(\"전송실패\");\r\n");
      out.write("	         }			\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function fn_bsnmlogout() {\r\n");
      out.write("	      \r\n");
      out.write("	      $.ajax({\r\n");
      out.write("	         type : \"POST\",\r\n");
      out.write("	         data : \"\",\r\n");
      out.write("	         url  : \"/bsnmLogout.do\",\r\n");
      out.write("	         \r\n");
      out.write("	         datatype : \"text\",\r\n");
      out.write("	         success  : function(data){\r\n");
      out.write("               if(data == \"1\" ) {\r\n");
      out.write("                  alert(\"로그아웃되었습니다.\");\r\n");
      out.write("                  location=\"/\";\r\n");
      out.write("               } else {\r\n");
      out.write("                  alert(\"로그아웃 실패.\");\r\n");
      out.write("               } \r\n");
      out.write("            },\r\n");
      out.write("            error : function(){\r\n");
      out.write("               alert(\"전송실패\");\r\n");
      out.write("            }         \r\n");
      out.write("	      });\r\n");
      out.write("	   }\r\n");
      out.write("	\r\n");
      out.write("function fn_adminlogout() {\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type : \"POST\",\r\n");
      out.write("			data : \"\",\r\n");
      out.write("			url  : \"/adminLogout.do\",\r\n");
      out.write("			\r\n");
      out.write("			datatype : \"text\",\r\n");
      out.write("			success  : function(data){\r\n");
      out.write("	            if(data == \"1\" ) {\r\n");
      out.write("	               alert(\"로그아웃되었습니다.\");\r\n");
      out.write("	               location=\"/\";\r\n");
      out.write("	            } else {\r\n");
      out.write("	            	alert(\"로그아웃 실패.\");\r\n");
      out.write("	            } \r\n");
      out.write("	         },\r\n");
      out.write("	         error : function(){\r\n");
      out.write("	            alert(\"전송실패\");\r\n");
      out.write("	         }			\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<ul class=\"header_right\">\r\n");
      out.write("  <li class=\"header_item\">\r\n");
      out.write("    <a class=\"header_link\" href=\"/noticeList.do\">공지사항</a>\r\n");
      out.write("  </li>\r\n");
      out.write("  \r\n");
      out.write("  ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write(" \r\n");
      out.write("  \r\n");
      out.write("  ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("  ");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  ");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("  \r\n");
      out.write("</ul>");
      out.write("\r\n");
      out.write("</header>\r\n");
      out.write("<!--header 끝-->\r\n");
      out.write("\r\n");
      out.write("<!--nav 시작-->\r\n");
      out.write("<nav>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<div class=\"nav_wrap\">\r\n");
      out.write("		<ul class=\"navbar\">\r\n");
      out.write("		  <li class=\"nav_item\">\r\n");
      out.write("		   <a class=\"nav_link\" href=\"/\">Home </a>\r\n");
      out.write("		  </li>\r\n");
      out.write("		  <li class=\"nav_item\">\r\n");
      out.write("		   <a class=\"nav_link\" href=\"prtBoardList.do\">동행</a>\r\n");
      out.write("		  </li>\r\n");
      out.write("		  <li class=\"nav_item\">\r\n");
      out.write("		   <a class=\"nav_link\" href=\"/planMain.do\">일정</a>\r\n");
      out.write("		  </li>\r\n");
      out.write("		 <li class=\"nav_item\">\r\n");
      out.write("		   <a class=\"nav_link\" href=\"/tripList.do\">국내여행지</a>\r\n");
      out.write("		  </li>\r\n");
      out.write("		 <li class=\"nav_item\">\r\n");
      out.write("		   <a class=\"nav_link\" href=\"/babList.do\">국내맛집</a>\r\n");
      out.write("		  </li>\r\n");
      out.write("		 <li class=\"nav_item\">\r\n");
      out.write("		   <a class=\"nav_link\" href=\"/reviewList.do\">여행후기</a>\r\n");
      out.write("		  </li>\r\n");
      out.write("		 <li class=\"nav_item\">\r\n");
      out.write("		   <a class=\"nav_link\" href=\"/packBoardList.do\">패키지여행</a>\r\n");
      out.write("		  </li>\r\n");
      out.write("		 <li class=\"nav_item\">\r\n");
      out.write("		   <a class=\"nav_link\" href=\"/packReviewList.do\">패키지여행후기</a>\r\n");
      out.write("		  </li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</div>");
      out.write("    \r\n");
      out.write("</nav>\r\n");
      out.write("<!--nav 끝-->\r\n");
      out.write("\r\n");
      out.write("<!--section 시작-->\r\n");
      out.write("<section>\r\n");
      out.write("<div class=\"\" style=\"width:100%;word-break:break-all;line-height:150%;padding:10px 0 40px 0;text-align:left;box-sizing:border-box;\">\r\n");
      out.write("	<div style=\"padding:0 10px 0 20px;\">\r\n");
      out.write("		<pre style=\"white-space: pre-wrap;\">\r\n");
      out.write("[서비스 이용약관]\r\n");
      out.write("\r\n");
      out.write("[제1장] 총칙\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제1조 (목적)\r\n");
      out.write("\r\n");
      out.write("이 약관은 \"하이트립\"(이하 \"회사\"라 합니다)에서 제공하는 서비스 및 이에 부수하는 네트워크, 웹사이트, 기타 서비스(이하 \"서비스\"라 합니다)의 이용에 대한 회사와 서비스 이용자의 권리ㆍ의무 및 책임사항, 기타 필요한 사항을 규정함을 목적으로 합니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제2조 (용어의 정의)\r\n");
      out.write("\r\n");
      out.write("① 이 약관에서 사용하는 용어의 정의는 다음과 같습니다.\r\n");
      out.write("\r\n");
      out.write(" 1. \"회사\"라 함은 서비스를 제공하는 사업자를 의미합니다.\r\n");
      out.write("\r\n");
      out.write(" 2. \"회원\"이란 이 약관에 따라 이용계약을 체결하고, 회사가 제공하는 서비스를 이용하는 자를 의미합니다.\r\n");
      out.write("\r\n");
      out.write(" 3. \"콘텐츠\"란 회원이 등록하거나 회사가 서비스와 관련하여 제공하는 정보일체를 의미합니다.\r\n");
      out.write("\r\n");
      out.write(" 4. \"운영진\"이란 회사가 임명한 서비스 운영 및 관리 권한이 있는 자를 의미합니다.\r\n");
      out.write("\r\n");
      out.write(" 5. \"게시판 관리자\"란 운영진의 승인을 받은 후 특정 게시판의 운영 및 게시물 관리 권한을 부여받은 자를 의미합니다.\r\n");
      out.write("\r\n");
      out.write(" 6. \"포인트\"란 회원의 활동에 따라 부여할 수 있는 점수를 의미합니다.\r\n");
      out.write("\r\n");
      out.write(" 7. \"레벨\"이란 회원의 활동에 따라 부여할 수 있는 등급을 의미합니다.\r\n");
      out.write("\r\n");
      out.write(" 8. \"패밀리 서비스\" 란 회원이 가입시와 동일한 계정으로 서비스를 이용할 수 있고 서비스를 제공하는 주체가 동일한 서비스를 의미합니다.\r\n");
      out.write("\r\n");
      out.write("② 본조 제1항 및 이 약관에서 정하지 않은 용어의 정의는 관계법령 및 서비스별 정책에서 정하는 바에 의하며, 이에 정하지 아니한 것은 일반적인 상 관례에 따릅니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제3조 (정보 등의 제공)\r\n");
      out.write("\r\n");
      out.write("회사는 다음 각 호의 사항을 회원이 알아보기 쉽도록 서비스 내에 표시합니다.\r\n");
      out.write("\r\n");
      out.write(" 1. 서비스 이용약관\r\n");
      out.write("\r\n");
      out.write(" 2. 개인정보 처리방침\r\n");
      out.write("\r\n");
      out.write(" 3. 청소년 보호정책\r\n");
      out.write("\r\n");
      out.write(" 4. 운영진 이메일 주소\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제4조 (약관의 효력 및 변경)\r\n");
      out.write("\r\n");
      out.write("① 회사는 이 약관의 내용을 회원이 알 수 있도록 서비스 내에 게시합니다.\r\n");
      out.write("\r\n");
      out.write("② 회사는 「약관의 규제에 관한 법률」, 「정보통신망이용촉진 및 정보보호 등에 관한 법률」, 「콘텐츠산업진흥법」 등 관련 법령에 위배하지 않는 범위에서 이 약관을 개정할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("③ 회사가 약관을 개정할 경우에는 서비스 화면에 게시하거나 기타의 방법으로 회원에게 공지합니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제5조 (이용계약의 체결 및 적용)\r\n");
      out.write("\r\n");
      out.write("① 이용계약은 회원이 되고자 하는 자(이하 \"가입신청자\" 라 합니다.)가 이 약관의 내용에 대하여 동의를 한 다음 서비스 이용 신청을 하고, 회사가 그 신청에 대해서 승낙함으로써 체결됩니다.\r\n");
      out.write("\r\n");
      out.write("② 회사는 가입신청자의 신청에 대하여 승낙함을 원칙으로 합니다. 다만, 회사는 다음 각 호의 어느 하나에 해당하는 이용 신청에 대해서는 승낙을 거절할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write(" 1. 이용신청서 내용을 허위로 기재하거나 이용신청 요건을 충족하지 못한 경우\r\n");
      out.write("\r\n");
      out.write(" 2. 회사가 서비스를 제공하지 않은 국가에서 비정상적이거나 우회적인 방법을 통해 서비스를 이용하는 경우\r\n");
      out.write("\r\n");
      out.write(" 3. 관련 법령에서 금지하는 행위를 할 목적으로 신청 하는 경우\r\n");
      out.write("\r\n");
      out.write(" 4. 사회의 안녕과 질서 또는 미풍양속을 저해할 목적으로 신청한 경우\r\n");
      out.write("\r\n");
      out.write(" 5. 부정한 용도로 서비스를 이용하고자 하는 경우\r\n");
      out.write("\r\n");
      out.write(" 6. 광고, 홍보등의 목적으로 서비스를 이용하고자 하는 경우\r\n");
      out.write("\r\n");
      out.write(" 7. 서비스 운영정책을 위반하는 경우\r\n");
      out.write("\r\n");
      out.write(" 8. 그 밖에 각 호에 준하는 사유로서 승낙이 부적절하다고 판단되는 경우\r\n");
      out.write("\r\n");
      out.write("③ 회사는 다음 각 호의 어느 하나에 해당하는 경우 그 사유가 해소될 때까지 승낙을 유보할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write(" 1. 회사의 설비에 여유가 없거나, 특정 기기의 지원이 어렵거나, 기술적 장애가 있는 경우\r\n");
      out.write("\r\n");
      out.write(" 2. 서비스 상의 장애가 발생한 경우\r\n");
      out.write("\r\n");
      out.write(" 3. 그 밖의 각 호에 준하는 사유로서 이용신청의 승낙이 어렵다고 판단되는 경우\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제6조 (약관 외 준칙)\r\n");
      out.write("\r\n");
      out.write("이 약관에서 정하지 아니한 사항과 이 약관의 해석에 관하여는「약관의 규제에 관한 법률」, 「정보통신망이용촉진 및 정보보호 등에 관한 법률」,「콘텐츠산업진흥법」 등 관련 법령 또는 상 관례에 따릅니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제7조 (운영정책)\r\n");
      out.write("\r\n");
      out.write("① 약관을 적용하기 위하여 필요한 사항과 약관에서 구체적 범위를 정하여 위임한 사항을 서비스 운영정책으로 정할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("② 회사는 운영정책의 내용을 안내문구나 공지사항 등의 방법으로 서비스 내에 게시합니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("[제2장] 개인정보 관리\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제8조 (개인정보의 보호 및 사용)\r\n");
      out.write("\r\n");
      out.write("① 회사는 관련 법령이 정하는 바에 따라 회원의 개인정보를 보호하기 위해 노력하며, 개인정보의 보호 및 사용에 대해서는 관련 법령 및 회사의 개인정보처리방침에 따릅니다. 다만, 회사가 제공하는 서비스 이외의 링크된 서비스에서는 회사의 개인정보처리방침이 적용되지 않습니다.\r\n");
      out.write("\r\n");
      out.write("② 서비스의 특성에 따라 회원의 개인정보와 관련이 없는 별명‧캐릭터 사진‧상태정보 등 자신을 소개하는 내용이 공개될 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("③ 회사는 관련 법령에 의해 관련 국가기관 등의 요청이 있는 경우를 제외하고는 개인정보를 본인의 동의 없이 타인에게 제공하지 않습니다.\r\n");
      out.write("\r\n");
      out.write("④ 회사는 회원의 귀책사유로 개인정보가 유출되어 발생한 피해에 대하여 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("[제3장] 회사와 회원의 의무\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제9조 (회사의 의무)\r\n");
      out.write("\r\n");
      out.write("① 회사는 관련 법령, 이 약관에서 정하는 권리의 행사 및 의무의 이행을 신의에 따라 성실하게 준수합니다.\r\n");
      out.write("\r\n");
      out.write("② 회사는 회원이 안전하게 서비스를 이용할 수 있도록 개인정보처리방침을 공시하고 준수합니다. 회사는 이 약관 및 개인정보처리방침에서 정한 경우를 제외하고는 개인정보가 제3자에게 공개 또는 제공되지 않도록 합니다.\r\n");
      out.write("\r\n");
      out.write("③ 회사는 계속적이고 안정적인 서비스의 제공을 위하여 서비스 개선을 하던 중 설비에 장애가 생기거나 데이터 등이 멸실‧훼손된 때에는 천재지변, 비상사태, 현재의 기술로는 해결이 불가능한 장애나 결함 등 부득이한 사유가 없는 한 지체 없이 이를 수리 또는 복구하도록 최선의 노력을 다합니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제10조 (회원의 의무)\r\n");
      out.write("\r\n");
      out.write("① 회원은 회사에서 제공하는 서비스의 이용과 관련하여 다음 각 호에 해당하는 행위를 해서는 안 됩니다.\r\n");
      out.write("\r\n");
      out.write(" 1. 이용신청 또는 회원 정보 변경 시 허위사실을 기재하는 행위\r\n");
      out.write("\r\n");
      out.write(" 2. 회사의 직원이나 운영자를 가장하거나 타인의 명의를 도용하여 글을 게시하거나 메일을 발송하는 행위, 타인으로 가장하거나 타인과의 관계를 허위로 명시하는 행위\r\n");
      out.write("\r\n");
      out.write(" 3. 다른 회원의 개인정보를 무단으로 수집ㆍ저장ㆍ게시 또는 유포하는 행위\r\n");
      out.write("\r\n");
      out.write(" 4. 도박 등 사행행위를 하거나 유도하는 행위, 음란ㆍ저속한 정보를 교류ㆍ게재하거나 음란 사이트를 연결(링크)하는 행위, 수치심ㆍ혐오감 또는 공포심을 일으키는 말ㆍ소리ㆍ글ㆍ그림ㆍ사진 또는 영상을 타인에게 전송 또는 유포하는 행위 등 서비스를 불건전하게 이용하는 행위\r\n");
      out.write("\r\n");
      out.write(" 5. 광고, 홍보성 게시물을 게재하거나 정치활동, 선거운동 등 서비스 본래의 목적 이외의 용도로 이용하는 행위\r\n");
      out.write("\r\n");
      out.write(" 6. 서비스를 이용하여 얻은 정보를 무단으로 복제‧유통‧조장하거나 상업적으로 이용하는 행위, 알려지거나 알려지지 않은 버그를 악용하여 서비스를 이용하는 행위\r\n");
      out.write("\r\n");
      out.write(" 7. 타인을 기망하여 이득을 취하는 행위, 서비스의 이용과 관련하여 타인에게 피해를 입히는 행위\r\n");
      out.write("\r\n");
      out.write(" 8. 지적재산권 또는 초상권을 침해하는 행위, 타인의 명예를 훼손하거나 손해를 가하는 행위, 저작권법에 위배되는 행위\r\n");
      out.write("\r\n");
      out.write(" 9. 법령에 의하여 전송 또는 게시가 금지된 정보(컴퓨터 프로그램)나 컴퓨터 소프트웨어ㆍ하드웨어 또는 전기통신장비의 정상적인 작동을 방해ㆍ파괴할 목적으로 고안된 바이러스ㆍ컴퓨터 코드ㆍ파일ㆍ프로그램 등을 고의로 전송ㆍ게시ㆍ유포 또는 사용하는 행위\r\n");
      out.write("\r\n");
      out.write(" 10. 회사로부터 특별한 권리를 부여 받지 않고 서비스를 변경하거나, 서비스에 다른 프로그램을 추가ㆍ삽입하거나, 서버를 해킹ㆍ역설계하거나, 소스 코드나 서비스 데이터를 유출ㆍ변경하거나, 별도의 서버를 구축하거나, 웹사이트의 일부분을 임의로 변경ㆍ도용하여 회사를 사칭하는 행위\r\n");
      out.write("\r\n");
      out.write(" 11. 특정 회원 또는 제 3자를 비방하는 행위, 타인의 명예를 훼손하거나 타인을 모욕하는 행위, 특정인 안티성 게시물을 게재하는 행위\r\n");
      out.write("\r\n");
      out.write(" 12. 갈등을 유발하는 게시물을 게재하는 행위, 타 게시판을 비방하는 행위, 너무 많은 욕설이 있는 게시물을 게재하는 행위\r\n");
      out.write("\r\n");
      out.write(" 13. 같은 사용자가 다른	아이디로 이중으로 회원에 가입하는 행위\r\n");
      out.write("\r\n");
      out.write(" 14. 게시판의 주제에 맞지 않는 게시물을 게재하는 행위\r\n");
      out.write("\r\n");
      out.write(" 15. 운영진의 서비스 운영을 방해하는 행위, 게시판 관리자의 게시판 운영을 방해하는 행위\r\n");
      out.write("\r\n");
      out.write(" 16. 게시판 관리자의 공지사항을 위반하는 행위, 게시판 관리자의 게시물 관리정책을 위반하는 행위\r\n");
      out.write("\r\n");
      out.write(" 17. 기타 서비스 운영정책을 위반하는 행위, 회사가 정한 이용조건을 위반하는 행위, 게시물 관리 정책에 위배되는 행위\r\n");
      out.write("\r\n");
      out.write(" 18. 그 밖에 관련 법령을 위반하는 행위, 공공질서 및 미풍양속에 위반되는 내용을 게재하는 행위, 사회통념에 반하는 행위\r\n");
      out.write("\r\n");
      out.write("② 회원의 계정 및 기기에 관한 관리 책임은 회원에게 있으며, 이를 타인이 이용하도록 하게 하여서는 안 됩니다. 회원의 관리 부실이나 타인에게 본인의 기기 이용을 승낙함으로 인해 발생하는 손해에 대해서 회사는 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("③ 회원의 부주의로 인하여 발생하는 손해에 대해 회사는 책임지지 않습니다\r\n");
      out.write("\r\n");
      out.write("④ 회원은 회원 가입시와 동일한 계정으로 \"패밀리 서비스\" 의 회원으로 활동 할 수 있으며 패밀리 서비스를 이용할 때 패밀리 서비스의 이용약관과 서비스 운영정책에도 따라야 합니다.\r\n");
      out.write("\r\n");
      out.write("⑤ 회사는 다음 각 호의 내용을 정할 수 있으며, 회원은 이를 따라야 합니다.\r\n");
      out.write("\r\n");
      out.write("  1. 서비스 이용 및 방법\r\n");
      out.write("\r\n");
      out.write("  2. 서비스 운영 정책\r\n");
      out.write("\r\n");
      out.write("  3. 외부 플랫폼 제휴 서비스 정책\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("⑥ 게시판 관리자는 다음 각 호의 내용을 정할수 있으며, 게시판 이용자는 이를 따라야 합니다.\r\n");
      out.write("\r\n");
      out.write("  1. 게시판의 이용 및 방법, 게시판 공지사항\r\n");
      out.write("\r\n");
      out.write("  2. 게시판의 게시물 관리 정책\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("[제4장] 서비스 이용 및 이용제한\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제11조 (서비스의 제공)\r\n");
      out.write("\r\n");
      out.write("회사는 회원에게 서비스를 제공할 때 이 약관에 정하고 있는 서비스를 포함하여 기타 부가적인 서비스를 함께 제공할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제12조 (서비스의 이용)\r\n");
      out.write("\r\n");
      out.write("① 서비스 이용시간은 24시간 운영을 원칙으로 합니다. 서비스를 임시로 중단하는 경우 회사의 방침에 따라 기간을 두어 운영을 중단할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("② 회사는 다음 각 호의 경우에는 서비스의 전부 또는 일부를 일시 정지할 수 있습니다. 이 경우 회사는 사전에 그 정지의 사유와 기간을 서비스 공지사항 등에 공지합니다. 다만, 사전에 공지할 수 없는 부득이한 사정이 있는 경우 사후에 공지할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write(" 1. 시스템 정기점검, 서버의 증설 및 교체, 네트워크의 불안정 등의 시스템 운영상 필요한 경우\r\n");
      out.write("\r\n");
      out.write(" 2. 정전, 서비스 설비의 장애, 서비스 이용폭주, 기간통신사업자의 설비 보수 또는 점검 등으로 인하여 정상적인 서비스 제공이 불가능한 경우\r\n");
      out.write("\r\n");
      out.write(" 3. 전시, 사변, 천재지변 또는 이에 준하는 국가비상사태 등 회사가 통제할 수 없는 상황이 발생한 경우\r\n");
      out.write("\r\n");
      out.write("③ 해외 로밍 등의 경우에는 콘텐츠의 전부 또는 일부의 이용이 불가능할 수 있으며, 이 경우 회사는 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("④ 네트워크를 통해 이용하는 서비스의 경우 이동통신사의 특성에 맞도록 추가요금이 발생할 수 있으며 이와 관련하여 회사는 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제13조 (서비스의 변경 및 중단)\r\n");
      out.write("\r\n");
      out.write("① 회사는 원활한 서비스 제공을 위해 운영상 또는 기술상의 필요에 따라 서비스를 변경할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("② 회사는 영업양도‧분할‧합병 등에 따른 영업의 폐지, 정보제공의 계약만료, 당해 서비스의 현저한 수익 악화 등 경영상의 중대한 사유로 인해 서비스를 지속하기 어려운 경우에는 서비스 전부를 중단할 수 있습니다. 이 경우 서비스 내에 공지합니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제14조 (정보의 수집 등)\r\n");
      out.write("\r\n");
      out.write("① 회사는 서비스의 원활하고 안정적인 운영 및 서비스 품질의 개선을 위하여 회원의 접속 정보(IP주소, 쿠키, 운영체제, 브라우저 버전 등)를 수집‧활용할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("② 회사는 서비스 개선 및 추가 등을 위한 목적으로 회원에게 추가정보를 요청할 수 있습니다. 이 요청에 대해 회원은 승낙하거나 거절할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제15조 (광고의 제공)\r\n");
      out.write("\r\n");
      out.write("① 회사는 서비스의 운영과 관련하여 서비스 내에 광고를 게재할 수 있고 외부 사이트를 통하여 소정의 수익을 제공 받을 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("② 회사가 제공하는 서비스 중의 배너 또는 링크 등을 통해 타인이 제공하는 광고나 서비스에 연결될 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("③ 제2항에 따라 타인이 제공하는 광고나 서비스에 연결될 경우 해당 영역에서 제공하는 서비스는 회사의 서비스 영역이 아니므로 회사가 신뢰성, 안정성 등을 보장하지 않으며, 그로 인한 회원의 손해에 대하여도 회사는 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제16조 (저작권, 콘텐츠 이용 등)\r\n");
      out.write("\r\n");
      out.write("① 작성한 게시물에 대한 책임은 등록한 회원에게 있습니다.\r\n");
      out.write("\r\n");
      out.write("② 회사는 서비스에 등록된 모든 콘텐츠를 회사의 운영을 위한 수익사업에 이용할 수 있고 서비스 및 패밀리 서비스 내의 게재권을 갖습니다.\r\n");
      out.write("\r\n");
      out.write("③ 회원은 회사가 제공하는 서비스를 이용하여 얻은 정보 중에서 회사 또는 타인에게 지적재산권이 귀속된 정보를 회사 또는 저작권자의 사전 동의 없이 복제ㆍ전송 등의 방법(편집, 공표, 공연, 배포, 방송, 2차적 저작물 작성 등을 포함합니다.)에 의하여 영리목적으로 이용하거나 타인에게 이용하게 하여서는 안 됩니다.\r\n");
      out.write("\r\n");
      out.write("③ 회사는 회원이 게시하거나 등록하는 서비스 내의 게시물에 대해 제10조에 따른 금지행위에 해당된다고 판단되는 경우에는 사전 통지 없이 이를 삭제 또는 이동하거나 그 등록을 거절할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제17조 (회원에 대한 서비스 이용제한)\r\n");
      out.write("\r\n");
      out.write("① 회원은 제10조에 따른 회원의 의무를 위반하는 행위를 하여서는 안 되며, 해당 행위를 하는 경우에 운영진 및 게시판 관리자는 다음 각 호의 구분에 따른 회원의 서비스 이용제한, 관련 정보(글, 사진, 영상 등) 삭제 및 기타의 조치를 포함한 이용제한 조치를 할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write(" 1. 활동정지 : 회원의 서비스 이용을 일정기간 동안 제한\r\n");
      out.write("\r\n");
      out.write(" 2. 영구정지 : 회원의 서비스 이용을 영구히 제한\r\n");
      out.write("\r\n");
      out.write("② 서비스 이용제한 조치를 할 때는 제10조에 따른 금지행위의 내용‧정도‧횟수‧결과 등을 고려하여 이용제한 조치의 사유와 기간을 회원에게 안내합니다.\r\n");
      out.write("\r\n");
      out.write("③ 영구정지의 경우 활동정지 사유를 영구정지 사유로 갈음할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("④ 회사는 이용제한으로 인하여 회원이 입은 손해를 배상하지 않습니다.\r\n");
      out.write("\r\n");
      out.write("⑤ 회사는 다음 각 호의 사유에 대한 조사가 완료될 때까지 해당 계정의 서비스 이용을 정지할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write(" 1. 계정이 해킹 또는 도용당했다는 신고가 접수된 경우\r\n");
      out.write("\r\n");
      out.write(" 2. 위법행위자로 의심되는 경우\r\n");
      out.write("\r\n");
      out.write(" 3. 그 밖에 각 호에 준하는 사유로 서비스 이용의 잠정조치가 필요한 경우\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제18조 (게시판 관리자의 의무 및 게시판 이용제한)\r\n");
      out.write("\r\n");
      out.write("① 게시판 관리자 및 게시판에서 활동하는 회원은 서비스 이용약관과 서비스 운영정책을 따라야 합니다.\r\n");
      out.write("\r\n");
      out.write("② 게시판 관리자는 게시판을 성실하게 운영해야 하며 게시판 운영과 게시물 관리에 대한 권한과 책임을 가지고 있습니다.\r\n");
      out.write("\r\n");
      out.write("③ 게시판 관리자는 부관리자를 한 명 이상 임명할 수 있으며 부관리자는 게시물 관리에 대한 일부 권한과 책임을 가지고 있습니다.\r\n");
      out.write("\r\n");
      out.write("④ 게시판 관리자는 회원의 개인정보를 수집하거나 이용하면 안됩니다.\r\n");
      out.write("\r\n");
      out.write("⑤ 게시판 관리자가 게시판을 불성실하게 운영하거나 장기간 활동을 하지 않는 경우 관리 권한이 회수될 수 있으며 부관리자에게 권한이 이관 될 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("⑥ 게시판 관리자가 부재중인 게시판은 운영진이 새 게시판 관리자를 임명할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("⑦ 서비스 운영을 방해하거나 서비스 이용약관 혹은 서비스 운영정책에 위배되는 경우 운영진은 게시판 이용을 제한할 수 있으며 게시판을 폐쇄조치할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("⑧ 기타 관계 법령에 위배되거나 공공질서 및 미풍양속에 위반되거나 사회통념에 반하는 경우 운영진은 게시판 이용을 제한할 수 있으며 게시판을 폐쇄조치할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제19조 (포인트 및 레벨)\r\n");
      out.write("\r\n");
      out.write("① 회사는 회원의 활동에 따라 포인트 및 레벨을 부여 할 수 있으며 그 기준과 정책은 운영진에 의하여 변경될 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("② 회원이 포인트나 레벨을 부당하게 취득한 경우 회사는 별도의 사전통보 없이 삭제할 수 있으며 회원의 서비스 이용을 제한할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("③ 회사는 포인트 및 레벨의 기준과 정책의 변경으로 인하여 발생한 손해에 대해 책임지지 않으며 이에 대한 분쟁에 개입할 의무가 없습니다.\r\n");
      out.write("\r\n");
      out.write("④ 회원 탈퇴 등으로 이용계약이 해지된 경우 포인트와 레벨은 모두 소멸됩니다.\r\n");
      out.write("\r\n");
      out.write("⑤ 포인트 및 레벨은 현금으로 환급되지 않으며 회사의 승인없이 제 3자에게 양도 및 양수할 수 없습니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("[제5장] 이용계약의 해지\r\n");
      out.write("\r\n");
      out.write("제20조 (계약 해지 등)\r\n");
      out.write("\r\n");
      out.write("① 회원은 언제든지 서비스 이용을 원하지 않는 경우 회원 탈퇴를 신청하여 이용계약을 해지할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("② 회원 탈퇴시 \"패밀리 서비스\" 에서도 탈퇴되어 서비스 이용계약이 해지됩니다.\r\n");
      out.write("\r\n");
      out.write("③ 회사는 회원이 이 약관 및 그에 따른 운영정책, 서비스 정책에서 금지하는 행위를 하는 등 본 계약을 유지할 수 없는 중대한 사유가 있는 경우에는 상당한 기간 전에 최고하고 기간을 정하여 서비스 이용을 중지하거나 이용계약을 해지할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("④ 회사는 최근의 서비스 이용일부터 연속하여 1년 동안 회사의 서비스를 이용하지 않은 회원(이하 \"휴면계정\" 이라 합니다)의 개인정보를 보호하기 위해 이용계약을 해지하고 회원의 개인정보 파기 등의 조치를 취할 수 있습니다. 이 경우 조치일 30일 전까지 계약해지, 개인정보 파기 등의 조치가 취해진다는 사실 및 파기될 개인정보 등을 회원에게 통지합니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("[제6장] 손해배상 및 면책조항 등\r\n");
      out.write("\r\n");
      out.write("제21조 (손해배상)\r\n");
      out.write("\r\n");
      out.write("① 회사 또는 회원은 본 약관을 위반하여 상대방에게 손해를 입힌 경우에는 그 손해를 배상할 책임이 있습니다. 다만, 고의 또는 과실이 없는 경우에는 그러하지 아니 합니다.\r\n");
      out.write("\r\n");
      out.write("② 회사가 개별서비스 제공자와 제휴 계약을 맺고 회원에게 개별서비스를 제공하는 경우, 개별서비스 제공자의 고의 또는 과실로 인해 회원에게 손해가 발생한 경우에 그 손해에 대해서는 회사가 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제22조 (회사의 면책)\r\n");
      out.write("\r\n");
      out.write("① 회사는 천재지변 또는 이에 준하는 불가항력으로 인하여 서비스를 제공할 수 없는 경우에는 서비스 제공에 관하여 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("② 회사는 서비스용 설비의 보수, 교체, 정기점검, 공사 등 기타 이에 준하는 사유로 발생한 손해에 대하여 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("③ 회사는 회원의 고의 또는 과실로 인한 서비스 이용의 장애에 대하여 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("④ 회사는 서비스에 게재한 정보나 자료 등의 신뢰성, 정확성 등에 대하여 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("⑤ 회사는 회원이 다른 회원 또는 타인과 서비스를 매개로 발생한 거래나 분쟁에 대해 개입할 의무가 없으며, 이로 인한 손해에 대해 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("⑥ 회사는 상품 판매의 당사자가 아니며 상품 정보 및 구매와 판매에 대해 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("⑦ 회사는 서비스에 게재된 여행 정보에 대해 책임을 지지 않으며 자료의 신뢰성, 정확성등에 대해 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("⑧ 회사는 회원의 서비스 이용으로 발생한 손해에 대해서 책임을 지지 않으며 회원이 서비스를 이용하여 기대하는 이익을 얻지 못하거나 상실한 것에 대하여 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("⑨ 회원이 해외 로밍 등으로 인해 콘텐츠 전부나 일부의 기능을 이용할 수 없는 경우 회사는 이에 대해 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("⑩ 회원이 회사가 제공하는 콘텐츠나 계정정보를 삭제한 경우 회사는 이에 대해 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("⑪ 회사는 임시 회원이나 회원이 아닌 자의 서비스 이용으로 발생한 손해에 대해서는 책임을 지지 않습니다.\r\n");
      out.write("\r\n");
      out.write("제23조 (회원에 대한 통지)\r\n");
      out.write("\r\n");
      out.write("① 회사가 회원에게 통지를 하는 경우 회원의 전자우편주소, 전자메모, 서비스 내 쪽지, 문자메시지(LMS/SMS) 등으로 할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("② 회사는 7일 이상 서비스 내에 게시하거나 팝업화면 등을 제시함으로써 제1항의 통지에 갈음할 수 있습니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제24조 (재판권 및 준거법)\r\n");
      out.write("\r\n");
      out.write("이 약관은 대한민국 법률에 따라 규율되고 해석됩니다. 회사와 회원 간에 발생한 분쟁으로 소송이 제기되는 경우에는 법령에 정한 절차에 따른 법원을 관할 법원으로 합니다.\r\n");
      out.write("\r\n");
      out.write("		</pre>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("</section>\r\n");
      out.write("<!--section 끝-->\r\n");
      out.write("\r\n");
      out.write("<!--footer 시작-->\r\n");
      out.write("<footer>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<div class=\"footer1\">\r\n");
      out.write("   <ul>\r\n");
      out.write("      <li><a class=\"footer_link\" href=\"/service.do\">이용약관</a></li>\r\n");
      out.write("      <li><a class=\"footer_link\" href=\"/policy.do\">개인정보 처리방침</a></li>\r\n");
      out.write("      <li>메일문의 guri@himedia.co.kr</li>         \r\n");
      out.write("   </ul>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("</footer>\r\n");
      out.write("<!--footer 끝-->\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /main/../include/header.jsp(10,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("s_userid");
      // /main/../include/header.jsp(10,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/main/../include/header.jsp(10,0) '${sessionScope.SessionUserID }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${sessionScope.SessionUserID }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent(null);
      // /main/../include/header.jsp(11,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("s_bsnmid");
      // /main/../include/header.jsp(11,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/main/../include/header.jsp(11,0) '${sessionScope.SessionBsnmID }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${sessionScope.SessionBsnmID }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f2 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f2_reused = false;
    try {
      _jspx_th_c_005fset_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f2.setParent(null);
      // /main/../include/header.jsp(12,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f2.setVar("s_adminid");
      // /main/../include/header.jsp(12,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f2.setValue(new org.apache.jasper.el.JspValueExpression("/main/../include/header.jsp(12,0) '${sessionScope.SessionAdminID }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${sessionScope.SessionAdminID }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f2 = _jspx_th_c_005fset_005f2.doStartTag();
      if (_jspx_th_c_005fset_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f2);
      _jspx_th_c_005fset_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f3 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f3_reused = false;
    try {
      _jspx_th_c_005fset_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f3.setParent(null);
      // /main/../include/header.jsp(13,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f3.setVar("s_superid");
      // /main/../include/header.jsp(13,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f3.setValue(new org.apache.jasper.el.JspValueExpression("/main/../include/header.jsp(13,0) '${sessionScope.SessionAdminSuperID }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${sessionScope.SessionAdminSuperID }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f3 = _jspx_th_c_005fset_005f3.doStartTag();
      if (_jspx_th_c_005fset_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f3);
      _jspx_th_c_005fset_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /main/../include/header.jsp(87,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_userid == null and s_bsnmid == null and\r\n  				s_adminid == null and s_superid == null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("  \r\n");
          out.write("  <li class=\"header_item\">\r\n");
          out.write("    <a class=\"header_link\" href=\"../joinWrite.do\">회원가입</a>\r\n");
          out.write("  </li>\r\n");
          out.write("  <li class=\"header_item\">\r\n");
          out.write("    <a class=\"header_link\" href=\"/loginWrite.do\">로그인</a>\r\n");
          out.write("  </li> \r\n");
          out.write("  ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /main/../include/header.jsp(97,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_userid != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("   <li class=\"header_item\">\r\n");
          out.write("    <a class=\"header_link\" href=\"../mbrModify.do\">정보수정</a>\r\n");
          out.write("  </li>\r\n");
          out.write("  <li class=\"header_item\">\r\n");
          out.write("    <a class=\"header_link\" href=\"javascript:fn_logout()\">로그아웃</a>\r\n");
          out.write("  </li>  \r\n");
          out.write("  ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /main/../include/header.jsp(107,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_bsnmid != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("   <li class=\"header_item\">\r\n");
          out.write("    <a class=\"header_link\" href=\"../bsnmModify.do\">정보수정</a>\r\n");
          out.write("  </li>\r\n");
          out.write("  <li class=\"header_item\">\r\n");
          out.write("    <a class=\"header_link\" href=\"javascript:fn_bsnmlogout()\">로그아웃</a>\r\n");
          out.write("  </li>  \r\n");
          out.write("  ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /main/../include/header.jsp(116,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${s_adminid != null or s_superid != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("  <li class=\"header_item\">\r\n");
          out.write("    <a class=\"header_link\" href=\"javascript:fn_adminlogout()\">로그아웃</a>\r\n");
          out.write("  </li>  \r\n");
          out.write("  ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
