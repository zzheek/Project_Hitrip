/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-31 05:57:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.planboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class planWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/HITRIPver0818/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Project_HITRIP/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1691982005951L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>일정 등록</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.13.2/jquery-ui.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("    font-family: Arial, sans-serif;\r\n");
      out.write("    background-color: #f0f0f0;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    height: 100vh;\r\n");
      out.write("}\r\n");
      out.write(".popup-container {\r\n");
      out.write("    border: 2px solid #ccc;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    width: 380px;\r\n");
      out.write("    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n");
      out.write("}\r\n");
      out.write(".popup-title {\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write(".form-row {\r\n");
      out.write("    margin-bottom: 15px;\r\n");
      out.write("}\r\n");
      out.write(".form-label {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    width: 100px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write(".form-input {\r\n");
      out.write("    width: 250px;\r\n");
      out.write("    padding: 5px;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("}\r\n");
      out.write(".form-textarea {\r\n");
      out.write("    width: 250px;\r\n");
      out.write("    height: 100px; /* 조정된 높이 */\r\n");
      out.write("    padding: 5px;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("    resize: none;\r\n");
      out.write("}\r\n");
      out.write(".btn_submit {\r\n");
      out.write("  padding: 10px 20px;\r\n");
      out.write("  background-color: #333;\r\n");
      out.write("  color: #fff;\r\n");
      out.write("  border: none;\r\n");
      out.write("  border-radius: 5px;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn_cancel {\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  padding: 10px 20px;\r\n");
      out.write("  color: #333;\r\n");
      out.write("  border: 1px solid #333;\r\n");
      out.write("  border-radius: 5px;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  margin-left: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn_cancel:hover {\r\n");
      out.write("  background-color: #333;\r\n");
      out.write("  color: #fff;\r\n");
      out.write("}\r\n");
      out.write(".result-text {\r\n");
      out.write("    margin-top: 15px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: #f00;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("	\r\n");
      out.write("	$(\"#button2\").click(function(){\r\n");
      out.write("		self.close();\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(\"#button1\").click(function(){\r\n");
      out.write("		//	DB에 넣기 위해 년,월,일로 분리작업\r\n");
      out.write("		let plansdate = $(\"#plansdate\").val();\r\n");
      out.write("		let planedate = $(\"#planedate\").val();\r\n");
      out.write("		\r\n");
      out.write("		plansdate = plansdate.split(\"-\");\r\n");
      out.write("		planedate = planedate.split(\"-\");\r\n");
      out.write("		\r\n");
      out.write("		let planyear = plansdate[0];\r\n");
      out.write("		let planmonth = plansdate[1];\r\n");
      out.write("		let planday = plansdate[2];\r\n");
      out.write("		\r\n");
      out.write("		let planeyear = planedate[0];\r\n");
      out.write("		let planemonth = planedate[1];\r\n");
      out.write("		let planeday = planedate[2];\r\n");
      out.write("		\r\n");
      out.write("		let plantitle = $.trim($(\"#plantitle\").val());\r\n");
      out.write("		let plancontent = $.trim($(\"#plancontent\").val());\r\n");
      out.write("		let planopen = $(\"#planopen\").val();\r\n");
      out.write("		\r\n");
      out.write("		if(plansdate == \"\") {\r\n");
      out.write("			alert(\"시작날짜를 입력해주세요.\");\r\n");
      out.write("			$(\"#plansdate\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(planedate == \"\") {\r\n");
      out.write("			alert(\"종료날짜를 입력해주세요.\");\r\n");
      out.write("			$(\"#planedate\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(plantitle == \"\") {\r\n");
      out.write("			alert(\"제목을 입력해주세요.\");\r\n");
      out.write("			$(\"#plantitle\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(plantitle.length > 33) {\r\n");
      out.write("			alert(\"제목의 길이 는 33글자까지입니다.\");\r\n");
      out.write("			$(\"#plantitle\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(plancontent == \"\") {\r\n");
      out.write("			alert(\"내용을 입력해주세요.\");\r\n");
      out.write("			$(\"#plancontent\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(plansdate > planedate){\r\n");
      out.write("			alert(\"동행 시작 종료일자가 올바르지 않습니다.\")\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		let datas = {\"planyear\":planyear,\"planmonth\":planmonth,\"planday\":planday\r\n");
      out.write("					,\"planeyear\":planeyear,\"planemonth\":planemonth,\"planeday\":planeday\r\n");
      out.write("					,\"plantitle\":plantitle,\"plancontent\":plancontent,\"planopen\":planopen};\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			\r\n");
      out.write("			type : \"POST\",\r\n");
      out.write("			url  : \"/planWriteSave.do\",\r\n");
      out.write("			data : datas,\r\n");
      out.write("			\r\n");
      out.write("			datatype : \"text\",\r\n");
      out.write("	         success  : function(data){\r\n");
      out.write("	        	 if(data == \"1\") {\r\n");
      out.write("	                alert(\"일정이 등록되었습니다.\");\r\n");
      out.write("	                opener.parent.location.reload();\r\n");
      out.write("	                window.close();\r\n");
      out.write("	             }else {\r\n");
      out.write("	                alert(\"저장실패!\");\r\n");
      out.write("	             }\r\n");
      out.write("	         },\r\n");
      out.write("	         error : function(){\r\n");
      out.write("	            alert(\"전송실패\");\r\n");
      out.write("	         }			\r\n");
      out.write("		});		\r\n");
      out.write("	});	\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<form name=\"frm\" id=\"frm\">\r\n");
      out.write("<div class=\"popup-container\">\r\n");
      out.write("    <div class=\"popup-title\">일정등록</div>    \r\n");
      out.write("    <div class=\"form-row\" id=\"date_area\">\r\n");
      out.write("        <span class=\"form-label\">시작날짜:</span>\r\n");
      out.write("        <input type=\"date\" class=\"form-input\" name=\"plansdate\" id=\"plansdate\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-row\" id=\"date_area\">\r\n");
      out.write("        <span class=\"form-label\">종료날짜:</span>\r\n");
      out.write("        <input type=\"date\" class=\"form-input\" name=\"planedate\" id=\"planedate\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-row\" id=\"title_area\">\r\n");
      out.write("        <span class=\"form-label\">제목:</span>\r\n");
      out.write("        <input type=\"text\" class=\"form-input\" name=\"plantitle\" id=\"plantitle\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-row\" id=\"content_area\">\r\n");
      out.write("        <span class=\"form-label\">내용:</span>\r\n");
      out.write("        <textarea name=\"plancontent\" id=\"plancontent\" class=\"form-textarea\"></textarea>\r\n");
      out.write("    </div>\r\n");
      out.write("    <input type=\"hidden\" name=\"planopen\" id=\"planopen\" value='N' />\r\n");
      out.write("	<div class=\"form-row\" id=\"button_area\">\r\n");
      out.write("        <button type=\"submit\" id=\"button1\" onclick=\"return false;\" class=\"btn_submit\">전송</button>\r\n");
      out.write("        <button type=\"reset\" id=\"button2\" class=\"btn_cancel\">취소</button>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
