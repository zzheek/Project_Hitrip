/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-08-31 05:30:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bsnm;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bsnmPassChange_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>패스워드 변경</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.13.2/jquery-ui.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("	\r\n");
      out.write("	$(\"#button1\").click(function(){\r\n");
      out.write("		let pass1 = $.trim($(\"#pass1\").val());	//	현재암호\r\n");
      out.write("		let pass2 = $.trim($(\"#pass2\").val());	//	변경암호\r\n");
      out.write("		let pass3 = $.trim($(\"#pass3\").val());	//	암호확인\r\n");
      out.write("				\r\n");
      out.write("		if(pass1 == \"\") {\r\n");
      out.write("			alert(\"현재 암호를 입력해주세요.\");\r\n");
      out.write("			$(\"#pass1\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if ( pass2.length < 4 || pass2.length > 20 ) {\r\n");
      out.write("	         alert(\"암호는 4~20자 사이로 입력해주세요.\");\r\n");
      out.write("	         $(\"#pass2\").focus();\r\n");
      out.write("	         return false;\r\n");
      out.write("	    }\r\n");
      out.write("		if( pass2 != pass3 ) {\r\n");
      out.write("	    	  alert(\"변경암호와 암호확인이 일치하지 않습니다.\");\r\n");
      out.write("	    	  $(\"#pass2\").focus();\r\n");
      out.write("	          return false;\r\n");
      out.write("	    }\r\n");
      out.write("		if(pass2 == \"\") {\r\n");
      out.write("			alert(\"변경하실 암호를 입력해주세요.\");\r\n");
      out.write("			$(\"#pass2\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if(pass3 == \"\") {\r\n");
      out.write("			alert(\"변경하신 암호 확인을 해주세요.\");\r\n");
      out.write("			$(\"#pass3\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//	let datas2 = \"userid=\"+userid+\"&nickname=\"+nickname+\"$email=\"+email;		\r\n");
      out.write("		let datas = {\"pass1\":pass1,\"pass2\":pass2};\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			\r\n");
      out.write("			type : \"POST\",\r\n");
      out.write("			url  : \"/bsnmPassChangeSub.do\",\r\n");
      out.write("			data : datas,\r\n");
      out.write("			\r\n");
      out.write("			datatype : \"text\",\r\n");
      out.write("	         success  : function(data){\r\n");
      out.write("	        	 if(data == \"4\") {\r\n");
      out.write("	        		 alert(\"암호가 일치하지 않습니다.\");\r\n");
      out.write("	        		 $(\"#pass1\").focus();\r\n");
      out.write("	        	 } else if(data == \"1\"){\r\n");
      out.write("	        		alert(\"암호가 변경되었습니다.\\n다시 로그인 시 적용됩니다.\");\r\n");
      out.write("	        		opener.location.href='/';	//	기존창 이동\r\n");
      out.write("	        		self.close();				//	팝업창 닫기\r\n");
      out.write("	        	 } else {\r\n");
      out.write("	        		 alert(\"변경실패.\");\r\n");
      out.write("	        	 }\r\n");
      out.write("	         },\r\n");
      out.write("	         error : function(){\r\n");
      out.write("	            alert(\"전송실패\");\r\n");
      out.write("	         }\r\n");
      out.write("		});		\r\n");
      out.write("	});	\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- <style>\r\n");
      out.write("body { font-size:12px; }\r\n");
      out.write("\r\n");
      out.write("#wrap {\r\n");
      out.write("	width:398px;\r\n");
      out.write("	height:290px;\r\n");
      out.write("	padding:5px;\r\n");
      out.write("	border:1px solid #cccccc;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#id_area {\r\n");
      out.write("	width:98%;\r\n");
      out.write("	padding:10px;\r\n");
      out.write("	margin-bottom:3px;\r\n");
      out.write("}\r\n");
      out.write("#nick_area {\r\n");
      out.write("	width:98%;\r\n");
      out.write("	padding:10px;\r\n");
      out.write("	margin-bottom:3px;\r\n");
      out.write("}\r\n");
      out.write("#mail_area {\r\n");
      out.write("	width:98%;\r\n");
      out.write("	padding:10px;\r\n");
      out.write("	margin-bottom:3px;\r\n");
      out.write("}\r\n");
      out.write("#radio_area {\r\n");
      out.write("	width:98%;\r\n");
      out.write("	padding:10px;\r\n");
      out.write("	margin-bottom:3px;\r\n");
      out.write("}\r\n");
      out.write("#button_area {\r\n");
      out.write("	width:98%;\r\n");
      out.write("	padding:10px;\r\n");
      out.write("	margin-bottom:3px;\r\n");
      out.write("}\r\n");
      out.write("#result_area {\r\n");
      out.write("	width:98%;\r\n");
      out.write("	padding:10px;\r\n");
      out.write("	margin-bottom:3px;\r\n");
      out.write("}\r\n");
      out.write("</style> -->\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("    font-family: Arial, sans-serif;\r\n");
      out.write("    background-color: #f0f0f0;\r\n");
      out.write("}\r\n");
      out.write(".popup-container {\r\n");
      out.write("    border: 2px solid #ccc;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    width: 300px;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n");
      out.write("}\r\n");
      out.write(".popup-title {\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write(".form-row {\r\n");
      out.write("    margin-bottom: 15px;\r\n");
      out.write("}\r\n");
      out.write(".form-label {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    width: 100px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write(".form-input {\r\n");
      out.write("    width: 180px;\r\n");
      out.write("    padding: 5px;\r\n");
      out.write("    border: 1px solid #ccc;\r\n");
      out.write("}\r\n");
      out.write(".form-button {\r\n");
      out.write("    padding: 8px 15px;\r\n");
      out.write("    background-color: #86bf62;\r\n");
      out.write("    border: none;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("}\r\n");
      out.write(".form-button:hover {\r\n");
      out.write("    background-color: #5f8e48;\r\n");
      out.write("}\r\n");
      out.write(".result-text {\r\n");
      out.write("    margin-top: 15px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: #f00;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"popup-container\">\r\n");
      out.write("    <div class=\"popup-title\">암호변경</div>\r\n");
      out.write("    <div class=\"form-row\" id=\"id_area\">\r\n");
      out.write("        <span class=\"form-label\">현재암호:</span>\r\n");
      out.write("        <input type=\"password\" class=\"form-input\" name=\"pass1\" id=\"pass1\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-row\" id=\"nick_area\">\r\n");
      out.write("        <span class=\"form-label\">변경암호:</span>\r\n");
      out.write("        <input type=\"password\" class=\"form-input\" name=\"pass2\" id=\"pass2\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-row\" id=\"email_area\">\r\n");
      out.write("        <span class=\"form-label\">암호확인:</span>\r\n");
      out.write("        <input type=\"password\" class=\"form-input\" name=\"pass3\" id=\"pass3\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-row\" id=\"button_area\">\r\n");
      out.write("        <button type=\"submit\" id=\"button1\" onclick=\"return false;\" class=\"form-button\">전송</button>\r\n");
      out.write("        <button type=\"reset\" class=\"form-button\">취소</button>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"result-text\" id=\"result_text\">결과: <span></span></div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- <div id=\"wrap\">\r\n");
      out.write("   <div id=\"id_area\">   현재암호 <input type=\"text\" name=\"pass1\" id=\"pass1\"></div>\r\n");
      out.write("   <div id=\"nick_area\"> 변경암호 <input type=\"text\" name=\"pass2\" id=\"pass2\"></div>\r\n");
      out.write("   <div id=\"email_area\"> 암호확인 <input type=\"text\" name=\"pass3\" id=\"pass3\"></div>\r\n");
      out.write("   <div id=\"button_area\">\r\n");
      out.write("      <button type=\"submit\" id=\"button1\" onclick=\"return false;\">전송</button>\r\n");
      out.write("      <button type=\"reset\">취소</button>\r\n");
      out.write("   </div>\r\n");
      out.write("   <div id=\"result_area\">결과 : <span id=\"result_text\"></span></div>\r\n");
      out.write("</div> -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
